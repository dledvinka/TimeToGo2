@page "/month/{year:int?}/{month:int?}"
@using TimeToGo2.WebApp.Data
@inject MonthService MonthService

<PageTitle>Month overview</PageTitle>

<p>This component demonstrates fetching data from a service.</p>

@if (monthData == null)
{
	<h1>Month overview</h1>
	<p><em>Loading...</em></p>
}
else
{
    <h1>Month overview @monthData.Month/@monthData.Year</h1>
	
	<table class="table">
        <thead>
            <tr>
                <th></th>
                <th>Day</th>
	            <th>Arrived</th>
                <th>Left</th>
                <th>Pause duration</th>
                <th>Calc. pause duration</th>
                <th>Worked hours</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var dayData in monthData.Days)
            {
                <tr>
                    <td>@dayData.DayInMonth</td>
                    <td>@dayData.DayOfWeek</td>
                    <td>@dayData.TimeArrived.ToShortTimeString()</td>
                    <td>@dayData.TimeLeft?.ToShortTimeString()</td>
                    <td>@dayData.PauseDuration?.ToString(@"hh\:mm")</td>
                    <td>@dayData.CalculatedPauseDuration.ToString(@"hh\:mm")</td>
                    <td>@dayData.WorkedHours.ToString(@"hh\:mm")</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
	[Parameter]
	public int? Year { get; set; }

	[Parameter]
    public int? Month { get; set; }

	protected override void OnInitialized()
	{
		Year = Year ?? DateTime.Now.Year;
		Month = Month ?? DateTime.Now.Month;
	}
	
	private MonthData? monthData;

    protected override async Task OnInitializedAsync()
    {
        monthData = await MonthService.GetAsync(Year.Value, Month.Value);
    }
}
